import { db } from "../../config/Firebase";
import { storage } from "../../config/Firebase";
import { useState } from "react";


export const fetchFood = (setLoading) => async (dispatch, previouState) => {
  try {
      setLoading(true);
      await db.collection('foods').onSnapshot(
        querySnapshot =>{
          let food = [];
          querySnapshot.forEach((doc) => {
            food.push({
              docID: doc.id,
              ...doc.data(),
            });
          });
      
          console.log("data from firebase into action", food);
          dispatch({
            type: 'FETCH_FOOD',
            payload: food,
          });
        }
      );
  
    } catch (error) {
      console.log("error", error);
      alert(error);
    } finally {
      setLoading(false);
    }
  };

export const addFood = (data) => async (dispatch, previouState) => {
  try {
    let res = await db.collection('foods').add(data)
    console.log("data added");
    dispatch({
      type: 'ADD_FOOD',
    });
  } catch (error) {
    console.log("error", error);
  }
}
export const delFood = (data) => async (dispatch, previouState) => {
  try {
    let res = await db.collection('foods').doc(data).delete()
    console.log("data Deleted");
    dispatch({
      type: 'DELETE_FOOD',
    });
  } catch (error) {
    console.log("error", error);
    alert(error);
  } 
}
export const dataExIm = (data) => (dispatch)=>{

  dispatch({
    type: 'DATA_EXIM',
    payload:data
  });
}
export const fetchItem = (setLoading) => async (dispatch, previouState) => {
  try {
    setLoading(true);
    let res = await db.collection("foods").get();
    let food=[]
    res.forEach((doc) => {
      food.push(doc.data())
    })
    console.log("foods", food);
    


    console.log("data from firebase into action", food);
    dispatch({
      type: 'FETCH_ITEM',
      payload: food,
    });

  } catch (error) {
    console.log("error", error);
    alert(error);
  } finally {
    setLoading(false);
  }
};
